stages:

  generate_user_profiles:
    cmd: >-
      poetry run python src/generate_users.py
      --num_users=${num_users}
      --categories="technology,sports,music,art"
      data/users_with_sentences.parquet
    deps:
      - src/generate_users.py
    params:
      - num_users
    outs:
      - data/users_with_sentences.parquet

  embed_users:
    cmd: poetry run python src/embed_sentences.py data/users_with_sentences.parquet data/user_embeddings.parquet
    deps:
      - src/embed_sentences.py
      - data/users_with_sentences.parquet
    outs:
      - data/user_embeddings.parquet

  make_articles:
    cmd: >-
      poetry run python src/make_dataset.py
      data/train.parquet
    deps:
      - src/make_dataset.py
    outs:
      - data/train.parquet

  format_articles:
    cmd: >-
      poetry run python src/format_dataset.py
      data/train.parquet
      data/formatted_dataset.parquet
      --limit=${dataset.limit}
    deps:
      - src/format_dataset.py
      - data/train.parquet
    outs:
      - data/formatted_dataset.parquet

  embed_articles:
    cmd: >-
      poetry run python src/embed_sentences.py
      data/formatted_dataset.parquet
      data/embeddings.parquet
      --dimension=${embedding.dimension}
      --model_name=${embedding.model_name}
    deps:
      - src/embed_sentences.py
      - src/embedding/embedding.py
      - data/formatted_dataset.parquet
    outs:
      - data/embeddings.parquet

  load_to_elasticsearch:
    cmd: >-
      poetry run python src/load_to_elasticsearch.py
      --es-host=localhost:9200
      --index-name=user_sentences
      data/users_with_sentences.parquet
    deps:
      - src/load_to_elasticsearch.py
      - data/users_with_sentences.parquet
